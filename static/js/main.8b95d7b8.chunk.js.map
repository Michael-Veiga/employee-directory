{"version":3,"sources":["components/Header/index.js","components/Wrapper/index.js","utils/UserData.js","components/Table/TableBody.js","components/Table/TableData.js","utils/API.js","components/Search/index.js","components/Nav/index.js","components/Table/Table.js","components/Main/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Wrapper","children","UserData","React","createContext","TableHeader","context","useContext","undefined","developerState","filteredUsers","name","map","login","picture","phone","email","key","uuid","data-th","src","medium","alt","first","last","TableData","id","headings","width","style","onClick","handleSort","toLowerCase","axios","get","Search","type","placeholder","aria-label","onChange","e","handleSearchChange","Nav","Table","useState","users","order","setDeveloperState","useEffect","API","then","results","data","Provider","value","event","filter","target","filteredList","item","indexOf","heading","sortedUsers","sort","a","b","localeCompare","length","Main","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8b95d7b8.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"header mt-3\">\r\n      <h1>Employee Directory</h1>\r\n      <p>\r\n        Click on the name header to filter by alphabetical order, or use the\r\n        search bar to find the employee by name.\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './Wrapper.css';\r\n\r\nfunction Wrapper({ children }) {\r\n  return <div className=\"wrapper\">{children}</div>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from 'react';\r\n\r\nconst UserData = React.createContext({});\r\n\r\nexport default UserData;\r\n","import React, { useContext } from 'react';\r\nimport UserData from '../../utils/UserData';\r\n\r\nconst TableHeader = () => {\r\n  const context = useContext(UserData);\r\n  return (\r\n    <tbody>\r\n      {context.developerState.filteredUsers[0] !== undefined &&\r\n      context.developerState.filteredUsers[0].name !== undefined ? (\r\n        context.developerState.filteredUsers.map(\r\n          ({ login, name, picture, phone, email }) => {\r\n            return (\r\n              <tr key={login.uuid}>\r\n                <td data-th=\"Image\" className=\"align-middle\">\r\n                  <img\r\n                    src={picture.medium}\r\n                    alt={'Profile'}\r\n                    className=\"img-responsive\"\r\n                  />\r\n                </td>\r\n                <td data-th=\"Name\" className=\"name-cell align-middle\">\r\n                  {name.first} {name.last}\r\n                </td>\r\n                <td data-th=\"Phone\" className=\"align-middle\">\r\n                  {phone}\r\n                </td>\r\n                <td data-th=\"Email\" className=\"align-middle\">\r\n                  {email}\r\n                </td>\r\n              </tr>\r\n            );\r\n          }\r\n        )\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </tbody>\r\n  );\r\n};\r\n\r\nexport default TableHeader;\r\n","import React, { useContext } from 'react';\r\nimport TableHeader from './TableBody';\r\nimport UserData from '../../utils/UserData';\r\n\r\nconst TableData = () => {\r\n  const context = useContext(UserData);\r\n  return (\r\n    <div className=\"datatable mt-5\">\r\n      <table\r\n        id=\"table\"\r\n        className=\"table table-dark table-hover table-condensed\"\r\n      >\r\n        <thead>\r\n          <tr>\r\n            {context.developerState.headings.map(({ name, width }) => {\r\n              return (\r\n                <th\r\n                  className=\"col\"\r\n                  key={name}\r\n                  style={{ width }}\r\n                  onClick={() => {\r\n                    context.handleSort(name.toLowerCase());\r\n                  }}\r\n                >\r\n                  {name}\r\n                  <span className=\"pointer\"></span>\r\n                </th>\r\n              );\r\n            })}\r\n          </tr>\r\n        </thead>\r\n        <TableHeader />\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableData;\r\n","import axios from 'axios';\r\n\r\nexport default {\r\n  getUsers: function () {\r\n    return axios.get('https://randomuser.me/api/?results=200&nat=us');\r\n  },\r\n};\r\n","import React, { useContext } from 'react';\r\nimport UserData from '../../utils/UserData';\r\n\r\nconst Search = () => {\r\n  const context = useContext(UserData);\r\n\r\n  return (\r\n    <div className=\"searchbox\">\r\n      <form className=\"form-inline\">\r\n        <input\r\n          className=\"form-control mr-sm-2\"\r\n          type=\"search\"\r\n          placeholder=\"Search\"\r\n          aria-label=\"Search\"\r\n          onChange={e => context.handleSearchChange(e)}\r\n        />\r\n\r\n        <button className=\"btn my-2 my-sm-0\" type=\"submit\"></button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport Search from '../Search';\r\n\r\nfunction Nav() {\r\n  return (\r\n    <nav className=\"navbar navbar expand-lg navbar-dark bg-dark text-white mb-0\">\r\n      <Search />\r\n    </nav>\r\n  );\r\n}\r\nexport default Nav;\r\n","import React, { useState, useEffect } from 'react';\r\nimport TableData from './TableData';\r\nimport API from '../../utils/API';\r\nimport UserData from '../../utils/UserData';\r\nimport Nav from '../Nav';\r\n\r\nconst Table = () => {\r\n  const [developerState, setDeveloperState] = useState({\r\n    users: [],\r\n    order: 'ascend',\r\n    filteredUsers: [],\r\n    headings: [\r\n      { name: 'Image', width: '10%' },\r\n      { name: 'Name', width: '10%' },\r\n      { name: 'Phone', width: '20%' },\r\n      { name: 'Email', width: '20%' },\r\n    ],\r\n  });\r\n\r\n  const handleSort = heading => {\r\n    if (developerState.order === 'descend') {\r\n      setDeveloperState({\r\n        order: 'ascend',\r\n      });\r\n    } else {\r\n      setDeveloperState({\r\n        order: 'descend',\r\n      });\r\n    }\r\n\r\n    const compareFnc = (a, b) => {\r\n      if (developerState.order === 'ascend') {\r\n        if (a[heading] === undefined) {\r\n          return 1;\r\n        } else if (b[heading] === undefined) {\r\n          return -1;\r\n        } else if (heading === 'name') {\r\n          return a[heading].first.localeCompare(b[heading].first);\r\n        } else {\r\n          return b[heading] - a[heading];\r\n        }\r\n      } else {\r\n        if (a[heading] === undefined) {\r\n          return 1;\r\n        } else if (b[heading] === undefined) {\r\n          return -1;\r\n        } else if (heading === 'name') {\r\n          return b[heading].first.localeCompare(a[heading].first);\r\n        } else {\r\n          return b[heading] - a[heading];\r\n        }\r\n      }\r\n    };\r\n    const sortedUsers = developerState.filteredUsers.sort(compareFnc);\r\n\r\n    setDeveloperState({ ...developerState, filteredUsers: sortedUsers });\r\n  };\r\n\r\n  const handleSearchChange = event => {\r\n    const filter = event.target.value;\r\n    const filteredList = developerState.users.filter(item => {\r\n      let values = item.name.first.toLowerCase();\r\n      return values.indexOf(filter.toLowerCase()) !== -1;\r\n    });\r\n\r\n    setDeveloperState({ ...developerState, filteredUsers: filteredList });\r\n  };\r\n\r\n  useEffect(() => {\r\n    API.getUsers().then(results => {\r\n      setDeveloperState({\r\n        ...developerState,\r\n        users: results.data.results,\r\n        filteredUsers: results.data.results,\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <UserData.Provider\r\n      value={{ developerState, handleSearchChange, handleSort }}\r\n    >\r\n      <Nav />\r\n      <div className=\"data-area\">\r\n        {developerState.filteredUsers.length > 0 ? <TableData /> : <div></div>}\r\n      </div>\r\n    </UserData.Provider>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from 'react';\r\nimport Table from '../Table/Table';\r\n\r\nfunction Main() {\r\n  return (\r\n    <>\r\n      <Table />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport Header from './components/Header';\nimport Wrapper from './components/Wrapper';\nimport Main from './components/Main';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Wrapper>\n        <Header />\n        <Main />\n      </Wrapper>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}